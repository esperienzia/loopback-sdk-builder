/* tslint:disable */
import { Injectable } from '@angular/core';
import { HttpErrorResponse } from '@angular/common/http';
import { throwError } from 'rxjs';

/**
 * Default error handler
 */
@Injectable()
export class ErrorHandler {
  // ErrorObservable when rxjs version < rc.5
  // ErrorObservable<string> when rxjs version = rc.5
  // I'm leaving any for now to avoid breaking apps using both versions
  public handleError(error: HttpErrorResponse): any {
    let err;
    if (error.error instanceof ArrayBuffer)
        err = String.fromCharCode.apply(null, new Uint8Array(error.error));
    error = new HttpErrorResponse({
    error: err ? err : error.error,
    headers: error.headers,
    status: error.status,
    statusText: error.statusText,
    url: error.url,
    });
    try {
      if (error.error.error) {
      return throwError(error.error.error);
      } else {
      return throwError(JSON.parse(error.error).error);
      }
    } catch (e) {
    return throwError('Server error');
    }
  }
}
